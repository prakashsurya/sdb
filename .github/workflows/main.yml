on:
  push:
  pull_request:
  schedule:
    - cron:  '0 0 * * *'

jobs:
  #
  # Verify the build and installation of SDB.
  #
  install:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.6'
      - run: python3 setup.py install
  #
  # Verify "pylint" runs successfully.
  #
  # Note, we need to have "drgn" installed in order to run "pylint".
  # Thus, prior to running "pylint" we have to clone, build, and install
  # the "drgn" from source (there's no package currently available).
  #
  pylint:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.6'
      - run: ./.github/scripts/install-drgn.sh
      - run: python3 -m pip install pylint pytest
      - run: pylint -d duplicate-code -d invalid-name sdb
      - run: pylint -d duplicate-code -d invalid-name tests
  #
  # Verify "pytest" runs successfully.
  #
  # Note, we need to have "drgn" installed in order to "pytest". Thus,
  # prior to running "pytest" we have to clone, build, and install the
  # "drgn" from source (there's no package currently available). In
  # addition, we install "libkdumpfile" in the same way beforehand
  # (there's no package currently for libkdumpfile either) so "drgn"
  # can open kdump-compressed crash dumps for the integration tests.
  #
  pytest:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.6'
      #
      # We use pip to install:
      # - `aws` so we can download our reference crash dump from S3
      #   with `download-dump-from-s3.sh`.
      # - `python-config` because it is needed for libkdumpfile.
      # - `pytest` and `pytest-cov` for obvious reasons.
      #
      # Note that we are creating the `python-config` symlink below
      # ourselves. This is very hacky but seems necessary since I
      # (Serapheim) wasn't able to find a way to correctly produce
      # it given the current infrastructure (apt and pip/pip3) as
      # this seems to be an issue with how Github/Azure is laying
      # out the Python build for us. Fortunately, we should be able
      # to properly fix everything by using virtual environments
      # (see issue #115).
      #
      - run: python3 -m pip install aws python-config pytest pytest-cov
      - run: ls /opt/hostedtoolcache/Python/3.6.9/x64/bin/
      - run: ln -s /opt/hostedtoolcache/Python/3.6.9/x64/bin/python3-config /opt/hostedtoolcache/Python/3.6.9/x64/bin/python-config
      - run: ls /opt/hostedtoolcache/Python/3.6.9/x64/bin/
      - run: ./.github/scripts/install-libkdumpfile.sh
      - run: ./.github/scripts/install-drgn.sh
      - run: ./.github/scripts/download-dump-from-s3.sh dump-201912060006.tar.lzma
      - run: pytest -v --cov sdb tests
  #
  # Verify "yapf" runs successfully.
  #
  yapf:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.6'
      - run: python3 -m pip install yapf
      - run: yapf --diff --style google --recursive sdb
      - run: yapf --diff --style google --recursive tests
  #
  # Verify "mypy" runs successfully.
  #
  # Note, we need to have "drgn" installed in order to run "mypy".
  # Thus, prior to running "mypy" we have to clone, build, and install
  # the "drgn" from source (there's no package currently available).
  #
  # Also note the following 2 things specific to mypy:
  # [1] We expicitly install version 0.730 as the default version that
  #     comes with Ubuntu is 0.75 which has a couple of bugs triggered
  #     by our codebase (they've been resolved on trunk though so we
  #     may want to change this soon).
  # [2] drgn doesn't provide a stubs file by default with all its type
  #     info leading to many complaints in mypy's side. Until this is
  #     fixed in drgn we skip any static type checking related to it.
  #
  mypy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.6'
      - run: ./.github/scripts/install-drgn.sh
      - run: python3 -m pip install mypy==0.730
      - run: python3 -m mypy --ignore-missing-imports --show-error-codes -p sdb
      - run: python3 -m mypy --ignore-missing-imports --show-error-codes -p tests
